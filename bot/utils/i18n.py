from __future__ import annotations
from typing import Dict
import re
import html

# –û—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤. –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å.
TRANSLATIONS: Dict[str, Dict[str, str]] = {
    "ru": {
        "report_title": "üìä –û—Ç—á—ë—Ç (–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {hours} —á–∞—Å–∞)",
        "total_channels": "1. –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: <b>{n}</b>",
        "total_keywords": "2. –í—Å–µ–≥–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: <b>{n}</b>",
        "found_posts": "3. –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º: <b>{n}</b>",
        "processed": "4. –†–∞–∑–æ–±—Ä–∞–Ω–æ: <b>{n}</b>",
        "postponed": "5. –û—Ç–ª–æ–∂–µ–Ω–Ω–æ: <b>{n}</b>",
        "pending": "6. –û–∂–∏–¥–∞—é—â–∏–µ —Ä–∞–∑–±–æ—Ä–∞: <b>{n}</b>",
        "operators_header": "\n\nüë§ <b>–û–ø–µ—Ä–∞—Ç–æ—Ä—ã, —Ä–∞–∑–±–∏—Ä–∞–≤—à–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã:</b>",
        "dash": "‚Äî",
        "detailed_report_caption": "–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á—ë—Ç",
        "settings_title": "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>",
        "settings_main": "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∏–∂–µ.",
        "settings_lang": "–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: <b>{lang_code}</b>",
        "settings_tz": "–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: <b>{tz}</b>",
        "settings_choose": "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∏–∂–µ.",
        "choose_lang_title": "üåê –í—ã–±–æ—Ä —è–∑—ã–∫–∞",
        "choose_tz_title": "üïí –í—ã–±–æ—Ä —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞",
        "btn_lang": "üåê –Ø–∑—ã–∫",
        "btn_tz": "üïí –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å",
        "back": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        "saved": "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ",
        "invalid_language": "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —è–∑—ã–∫",
        "invalid_tz": "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è TZ",
        "notify_found": "üîç <b>–ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º</b>",
        "notify_channel": "üì¢ <b>–ö–∞–Ω–∞–ª:</b> {title}",
        "notify_date": "üïí <b>–î–∞—Ç–∞:</b> {dt}",
        "notify_link": "üîó <b>–°—Å—ã–ª–∫–∞:</b> {url}",
        "notify_keywords": "<b>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</b> {kws}",
        "notify_text": "<b>–¢–µ–∫—Å—Ç:</b>\n{preview}",
        "btn_report": "üìä –û—Ç—á–µ—Ç",
        "btn_settings": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
        "btn_add_channel": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª",
        "btn_add_keyword": "üîë –î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ",
        "btn_manage_operators": "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏",
        "btn_add_telethon": "üîê –î–æ–±–∞–≤–∏—Ç—å Telethon",
        "btn_bulk_channels": "üì• –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª—ã",
        "btn_bulk_keywords": "üì• –î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞",
        "btn_propose_channel": "üì¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–∞–Ω–∞–ª",
        "btn_propose_keyword": "üîç –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ",
        "btn_request_operator": "üìù –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞",
        "btn_feedback": "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
        "btn_help": "‚ùì–û —Å–∏—Å—Ç–µ–º–µ",
    },
    "en": {
        "report_title": "üìä Report (last {hours} hours)",
        "total_channels": "1. Total channels: <b>{n}</b>",
        "total_keywords": "2. Total keywords: <b>{n}</b>",
        "found_posts": "3. Posts matched: <b>{n}</b>",
        "processed": "4. Processed: <b>{n}</b>",
        "postponed": "5. Postponed: <b>{n}</b>",
        "pending": "6. Pending: <b>{n}</b>",
        "operators_header": "\n\nüë§ <b>Operators who handled incidents:</b>",
        "dash": "‚Äî",
        "detailed_report_caption": "Detailed report",
        "settings_title": "‚öôÔ∏è <b>Settings</b>",
        "settings_main": "Choose a settings section below.",
        "settings_lang": "Interface language: <b>{lang_code}</b>",
        "settings_tz": "Time zone: <b>{tz}</b>",
        "settings_choose": "Choose new values below.",
        "choose_lang_title": "üåê Language selection",
        "choose_tz_title": "üïí Time zone selection",
        "btn_lang": "üåê Language",
        "btn_tz": "üïí Time zone",
        "back": "‚¨ÖÔ∏è Back",
        "saved": "Saved",
        "invalid_language": "Invalid language",
        "invalid_tz": "Invalid TZ",
        "notify_found": "üîç <b>Post matched by keywords</b>",
        "notify_channel": "üì¢ <b>Channel:</b> {title}",
        "notify_date": "üïí <b>Date:</b> {dt}",
        "notify_link": "üîó <b>Link:</b> {url}",
        "notify_keywords": "<b>Keywords:</b> {kws}",
        "notify_text": "<b>Text:</b>\n{preview}",
        "btn_report": "üìä Report",
        "btn_settings": "‚öôÔ∏è Settings",
        "btn_add_channel": "‚ûï Add channel",
        "btn_add_keyword": "üîë Add keyword",
        "btn_manage_operators": "üë• Manage operators",
        "btn_add_telethon": "üîê Add Telethon",
        "btn_bulk_channels": "üì• Import channels",
        "btn_bulk_keywords": "üì• Import keywords",
        "btn_propose_channel": "üì¢ Propose channel",
        "btn_propose_keyword": "üîç Propose keyword",
        "btn_request_operator": "üìù Request operator access",
        "btn_feedback": "üí¨ Feedback",
        "btn_help": "‚ùìAbout",
    },
}


def t(lang: str | None, key: str, **kwargs) -> str:
    lang = (lang or "ru").lower()
    data = TRANSLATIONS.get(lang) or TRANSLATIONS["ru"]
    template = data.get(key) or TRANSLATIONS["ru"].get(key) or key
    try:
        return template.format(**kwargs)
    except Exception:
        return template


# –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è HTML-—Ç–µ–∫—Å—Ç–∞ (—Ç–µ–ª–µ–≥—Ä–∞–º) –≤ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è DOCX
_def_tag_block = re.compile(r"<[^>]+>")

def strip_html(text: str) -> str:
    if not text:
        return ""
    # –ü–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫
    text = text.replace("<br>", "\n").replace("<br/>", "\n").replace("<br />", "\n")
    # –°—Å—ã–ª–∫–∏: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ç–µ–∫—Å—Ç
    text = re.sub(r"<a\b[^>]*>(.*?)</a>", r"\1", text, flags=re.IGNORECASE | re.DOTALL)
    # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ–≥–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª—è–µ–º, –æ—Å—Ç–∞–≤–ª—è—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    text = re.sub(r"</?(b|strong|i|em|u|s|code|pre|blockquote)>", "", text, flags=re.IGNORECASE)
    # –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å
    text = re.sub(r"<[^>]+>", "", text)
    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º HTML-—Å—É—â–Ω–æ—Å—Ç–∏
    return html.unescape(text)


def t_plain(lang: str | None, key: str, **kwargs) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –±–µ–∑ HTML-—Ç–µ–≥–æ–≤ (–¥–ª—è DOCX)."""
    return strip_html(t(lang, key, **kwargs))
