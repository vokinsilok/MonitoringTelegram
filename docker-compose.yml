version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:16
    container_name: telegram_monitoring_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-telegram_monitoring}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - telegram_monitoring_network

  # Backend API (FastAPI)
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: telegram_monitoring_backend
    environment:
      DB_USER: ${DB_USER:-postgres}
      DB_PASS: ${DB_PASSWORD:-postgres}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-telegram_monitoring}
      DEBUG: ${DEBUG:-true}
      HOST: 0.0.0.0
      PORT: 8000
    volumes:
      - ./migrations:/app/migrations
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - telegram_monitoring_network

  # Telegram бот (aiogram)
  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: telegram_monitoring_bot
    environment:
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-telegram_monitoring}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      ADMIN_IDS: ${ADMIN_IDS}
      BACKEND_URL: http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - telegram_monitoring_network

  # Сервис для выполнения миграций
  migrations:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: telegram_monitoring_migrations
    environment:
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-telegram_monitoring}
    volumes:
      - ./migrations:/app/migrations
    command: ["alembic", "upgrade", "head"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - telegram_monitoring_network

volumes:
  postgres_data:

networks:
  telegram_monitoring_network:
    driver: bridge
